<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[H5获取用户位置API + 百度地图API介绍]]></title>
    <url>%2F2017%2F06%2F26%2Flocation%2F</url>
    <content type="text"><![CDATA[一. Geolocaiton API 功能介绍 Geolocation接口是一个用来获取设备地理位置的可编程的对象,它可以让Web内容访问到设备的地理位置,这将允许Web应用基于用户的地理位置提供定制的信息. 出于安全考虑,当一个Web页尝试获取地理位置信息时, 会请求用户批准地理位置访问权限, 每个浏览器都有自己请求用户批准该权限的策略和方法. 二. Geolocaiton API 使用说明Geolocation API是通过window.navigator.geolocation获取地理定位的访问的,该对象有以下三个方法: 1. getCurrentPosition()1.1 语法1navigator.geolocation.getCurrentPosition(success,error,options) 1.2 参数说明 参数1.success: 必选参数,其作用是获取地理位置信息成功后返回执行的回调函数. 参数2.error:可选参数,作用是获取地理位置信息异常或失败时执行的回调函数. 参数3.options:可选参数,作用是添加一些可选参数设置 1.3 代码示例1234567891011121314151617181920212223242526272829303132&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;地理定位&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;script&gt; //获取当前地理信息 window.navigator.geolocation.getCurrentPosition(success,error); //获取地理信息成功时的回调函数 function success(position) &#123; alert(&quot;成功获取您的地理信息&quot;); //获取经度维度信息 //coords属性 var latitude = position.coords.latitude; var longitude = position.coords.longitude; //打印纬度,经度信息 console.log(latitude); console.log(longitude); &#125; //获取地理信息失败时的回调函数 function error(msg) &#123; alert(&quot;获取您的地理信息失败&quot;); &#125;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 上述代码中,在获取地理位置信息成功时的回调函数中,可以传递pos这个参数对象,通过该参数对象,可以获得当前用户访问Web页面时的地理位置信息. pos对象包含一个coords属性,该属性表示一系列的地理位置信息: latitude: 以十进制数表示的纬度 longitude:以十进制数表示的经度 altitude:位置相对于椭圆球面的高度 accuracy: 以米为单位的纬度和经度坐标的精度水平 altitudeAccuracy:以米为单位的高度坐标精度水平 heading: 运动的方向,通过相对正北做顺时针旋转的角度指定. speed:以米/秒为单位的设备当前地面速度 2. watchPosition() 和 clearWatch()2.1 方法说明 watchPosition和 clearWatch是一对方法,其原理和setInterval,setTimeout方法相同, watchPositon方法会返回一个唯一标识,clearWatch可通过这个唯一标识清楚watchPosition方法的监听. 2.2 语法watchPosition()的语法和getCurrentPosition()一模一样,同样可以传入三个参数: 参数1.success: 必选参数,其作用是获取地理位置信息成功后返回执行的回调函数. 参数2.error:可选参数,作用是获取地理位置信息异常或失败时执行的回调函数. 参数3.options:可选参数,作用是添加一些可选参数设置 三.使用百度地图获取API接口3.1 百度地图API简介 百度地图API是为开发者免费提供的一套基于百度地图服务的应用接口，包括JavaScript API、Web服务API、Android SDK、iOS SDK、定位SDK、车联网API、LBS云等多种开发工具与服务，提供基本地图展现、搜索、定位、逆/地理编码、路线规划、LBS云存储与检索等功能，适用于PC端、移动端、服务器等多种设备，多种操作系统下的地图应用开发。 百度地图开放平台地址:http://lbsyun.baidu.com/ 3.2 JavaScript API 操作步骤1. 申请秘钥 为了统一平台服务的配额管理，JavaScript API在新版本引入ak机制。JavaScript API v1.4及以前版本无须申请密钥（ak），自v1.5版本开始需要先申请秘钥（ak），才可使用，如需获取更高配额，可申请认证企业用户。 申请秘钥的流程十分简单,和注册一个账号类似,只需要填入姓名,手机,和邮箱进行验证即可. 2. 选择Demo 百度地图API提供了一系列的功能,你可以根据需求选择对应的Demo,即可查看该Demo的API文档. 3. 引入JavaScript代码 在API文档中,可以在源代码编辑器中查看该Demo对应JavaScript代码,你只需要复制该JavaScript代码到您的代码编辑器中,添加&lt;script&gt;中的秘钥, 并根据其需求更改geolocation对象地理信息即可.]]></content>
  </entry>
  <entry>
    <title><![CDATA[2017年,前端应该学习的5个JavaScript框架]]></title>
    <url>%2F2017%2F05%2F24%2Fhello-world%2F</url>
    <content type="text"><![CDATA[前言 个人观点,供您参考 观点源自作者的使用经验和日常研究 排名基于框架的受欢迎度, 语法结构, 易用性等特性 希望大家能够基于此视频找到最适合自己的框架 下面介绍的都是严格的前端框架和库 Top5: PolymerPolymer是由谷歌Chorme组织内的前端开发团队领导的一个开源项目, 该项目的口号是: [UseThePlatform]. 团队相信, 拥抱现代Web平台是向用户和开发人员提供应用的最佳方式. 该producer介绍了Polymer的以下特性: Web组件:基于W3C标准的Web组件API. 使用原生浏览器的技术:Web组件内嵌于原生浏览器, 所以不需要像jQuery, dojo等第三方库 ,可以和其他Web组件无缝协作. Behaviors:其独有的Behaviors去分享Web组件和申明其属性. 封装:能够将代码和结构封装到相同位置. 自定义元素:开发人员能够自定义元素, 添加标签和属性 Top4: EmberEmber.js是一款开源的JavaScript MVC框架，用来创建Web应用程序。它免除了样板文件并提供了一套标准的应用程序架构。 项目口号是:「A framework for creating ambitious web applications」。 高效的生产力:其友好的API和符合人体工程学的设计理念, 使得开发人员能够快速完成构建工作 命名约定: Ember通过命名约定这种方式最少的节约代码的缩写 Ember-CLI: 开发Ember应用程序的官方命令行工具包,通过提供您在一个集成包中构建可生产就绪的Web应用程序所需的一切 丰富的插件: Ember提供丰富的插件,能够轻松的在应用程序之间共享通用代码 Handlebars集成模板: 能够在底层数据更改时自动更新, 可以大大减少代码量 Top3: AngularAngularJS最初由Misko Hevery 和Adam Abrons于2009年开发，后来成为了Google公司的项目。AngularJS弥补了HTML在构建应用方面的不足，其通过使用标识符（directives）结构，来扩展Web应用中的HTML词汇，使开发者可以使用HTML来声明动态内容，从而使得Web开发和测试工作变得更加容易. 全功能框架:具有HTML模块, 其特有的模块化, 自动化双向数据绑定, 语义化标签, 依赖注入等属性. 特别适合重量级的应用开发. 十分流行:首先它由Google维护. 其次是因为Angular是MEAN全堆栈的一部分 Angular CLI : 只需要掌握几条命令就可以构建Angular项目 TypeScript: Angular默认使用的TypeScript写,对喜欢TypeScript的开发者更加友好. 使用Ionic框架: Ionic框架被用来建立Hybrid App, 是目前最有潜力的一款HTML5手机应用开发框架. Top2: ReactReact 起源于 Facebook 的内部项目, 近年来,React从最早的UI引擎变成了一整套前后端通吃的 Web App 解决方案. React的理念是:[ Learn once, write everywhere] 轻量&amp;高效: 和Angular不同,React并不是全功能框架, 所以比较轻量. 虚拟DOM也使得拥有很好的性能表现. 十分火: 可以替代Angular成为MERN全堆栈的一部分. Flux&amp;Redux: 虽然React在视图层中运行,但是也可以使用Flux和Redux 创造响应式应用:React提供了响应式的视图组件和自有的命令行 移动端应用:Producer认为React是最好用的搭建移动端应用的框架 Top1: Vue.jsVue.js是一种渐进式的JavaScript框架. 与其他重量级框架不同的是,Vue 采用自底向上增量开发的设计.Vue 的核心库只关注视图层,它不仅易于上手,还便于与第三方库或既有项目整合. 简单: 比较其他框架,有着更友善的学习曲线, 只有使用者有基本的HTML和JavaScript知识, 都可以学习使用Vue 灵活 &amp; 生产性高: 在Vue2.0版本中添加了模板功能,其简单小巧的核心,渐进式的技术栈,可以应付所有应用. 速度快: Vue的虚拟DOM优化很好,速度十分的快,特别适合开发要求比较高的数据可视化和动画的应用中. v-model &amp; 2 way data binding: 可以使用v-model和2 way model进行数据绑定 Vue-CLI:Vue有自己的命令行,部署Vue比Angular简单很多. 本文内容来自Traversy Media频道中看到的视频内容,翻译后,供您参考! 原YouTube视频：Top 5 JavaScript Frameworks 2017 强烈推荐该YouTube频道 :Traversy Media]]></content>
  </entry>
  <entry>
    <title><![CDATA[前端2017年学习路线指南]]></title>
    <url>%2F2017%2F05%2F10%2Fwebway%2F</url>
    <content type="text"><![CDATA[作为一名Web开发人员和设计师，到底应该在2017年学习什么技术？ 在本指南中，将讨论所有最新技术，告诉你如何正确的学习前端, 哪些知识是必须掌握的?哪些知识是可以作为补充学习的? 第一步: 掌握HTML/CSS 这是你最初必须掌握的 是网站的构建元素 没得选! 随着你前端的学习进程,熟练掌握 HTML/CSS简单易学 第二步: 使用基础工具 文本编辑器: Notepad2 / Sublime Text / Atom.io / IDE 图像编辑器:Photoshop, Illustrator, GIMP, Something slse FTP / SSH 工具 : Filezilla ,Putty 好的浏览器: Chrome 云盘: Dropbox, Google Drive, Box 第三步: 学习原生JavaScript 原生JavaScript(现阶段不需要理会Node.js 和任何框架) 理解数据类型: String, Number, Arrays, Objects, etc 理解函数, 条件表达式, 循环,操作符等 事件处理 JSON(JavaScript Object Notation), JavaScript对象表示法 jQuery框架 第四步:搭建一个基础网站: 获取一个虚拟主机账户(Hostgator, InMotion, etc) 学习虚拟主机控制系统基础——cPanel (Email ,FTP Setup) 通过FPT(文件传输协议)上传你的项目 创建域名并和你的主机连接 第五步:恭喜你! 你现在是一个网页设计师了!——(现阶段还不足以称Web Developer) 有能力搭建一个专业的简单网站 有能力搭建网页应用的界面 能够把一张PSD 转化为基于HTML/CSS的静态网页 有在公司上班的实力, 或者选择成为一名自由职业者 第六步: 思考接下来的侧重点! HTML/CSS框架: Bootstrap, Foudation(建议优先掌握!) 服务器端语言: PHP, Ruby…. JavaScript框架: React ,Angular 数据库: MySQL, PostgreSQL 第七步: HTML/CSS框架 Bootstrap(强烈推荐学习该框架!) Zurb Foundation Skeleton MUI Pure 第八步: 服务器端编程语言(专注于一个!) PHP(不是最好的语言,但是是最可靠的服务器端语言) Node.js(一款新型, 强大的后台语言) Ruby on Rails (最好的框架,但已经到了瓶颈期) Python(简单易学,但相对于主流语言并不流行)——可现在AI的爆红导致Python最近很火! 第九步: 数据库(专注于一个!) 关系型数据库: MySQL 和 PostgreSQL 非机构化数据库: MongoDB 和 CouchDB 建议选择一个以下的组合: PHP/ MySQL Node.js/ MongoDB 第十步: 需要学习的一些端技术 Git &amp; Github SSH(安全外壳协议) &amp; Basic Command Line CSS 预编译器: Sass/Less APIS / REST Service HTTPS / SSL 第十一步: 部署应用 专用服务器/ VPS 应用云平台: Heroku, Digital Ocean, AWS 部署工具 Linux命令行 维护和升级 第十二步:恭喜你,你现在成为一名网页开发者了! 能够创造出网页引用 能构建后端APIs 能连接服务器 能够管理数据库 你的选择: 得到一份很好的工作 / 成为自由职业者 / 开始一项事业 第十三步:编程框架 JavaScript框架: React, Angular 2, Vue.js, Express(后端) PHP框架: Laravel, Codeigniter, Symfony Ruby on rails MVC框架: Routing, Database Mapping, Helpers, Data Binding, Templating &amp; UI 第十四步: 内容管理系统(基于PHP) Wordpress(强烈推荐), Joomla, Drupal 有利用客户更新和维护 丰富的插件 开发速度快 模板的功能有限 第十五步: 移动App发展 这是未来的趋势 你不需要学习Java 和C语言! 你只需要掌握JavaScript!我们可以使用React Native, Ionic, Cordova 等框架来构建移动App 第十六步:现阶段,现在你需要考虑什么? 专注于你的事业 回去学习更多的数据结构 跟进现在的新技术 学习一门高级语言,类似于Java, C语言 以上内容来自我于在YouTube上看的一个视频, 感觉到很受用, 所以把视频的要点进行翻译,供您参考! 原YouTube视频：Web Development In 2017 - A Practical Guide 强烈推荐该YouTube频道 :Traversy Media]]></content>
  </entry>
</search>